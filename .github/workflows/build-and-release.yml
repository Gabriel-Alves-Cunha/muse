# To make this file run, do this on the terminal:

# Make sure to bump the version on package.json

# Make sure your working tree is in a clean state:
# > git status

# Check out to the `build` branch:
# > git checkout build

# Reset that branch to some other branch/commit:
# > git reset --hard main

# And push:
# > git push
##################################################
# To make this action run, do this on the terminal:

# Make sure to bump the version on package.json;

# Make sure your working tree is in a clean state:
# `git status`

# If ok, create a git tag:
# `git tag v<new_release_version>`

# And push:
# `git push`

name: Build and release

on:
  push:
    tags:
      - "v*"

jobs:
  build_on_linux:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build/Bundle Electron-React app
        run: yarn build

      - name: Build Electron app for Linux only
        run: yarn release:linux

      # The `Release action` below only knows the files that are in the root folder...
      - name: Move release files to root folder
        run: |
          mv dist/latest-linux.yml .
          mv dist/Muse-* .

      - name: Release action
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          # This token is provided by Actions, you do not need to create your own token:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            latest-linux.yml
            Muse-*
